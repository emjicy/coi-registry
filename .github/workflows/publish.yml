name: Deploy COI Registry Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node (for JSON validation)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Prepare site
        run: |
          set -euo pipefail
          mkdir -p public

          # --- index.html ---
          if [ -f public/index.html ]; then
            echo "✓ Using public/index.html"
          elif [ -f index.html ]; then
            echo "→ Copying index.html to public/"
            cp index.html public/index.html
          else
            echo "❌ index.html not found. Expected at public/index.html or repo root."
            exit 21
          fi

          # --- registry.json ---
          if [ -f public/registry.json ]; then
            echo "✓ Using public/registry.json"
          elif [ -f registry.json ]; then
            echo "→ Copying registry.json (root) to public/"
            cp registry.json public/registry.json
          elif [ -f data/registry.json ]; then
            echo "→ Copying data/registry.json to public/"
            cp data/registry.json public/registry.json
          else
            echo "❌ registry.json not found at public/, repo root, or data/."
            exit 22
          fi

          # --- Optional: custom domain ---
          if [ ! -z "${CUSTOM_DOMAIN-}" ]; then
            echo "$CUSTOM_DOMAIN" > public/CNAME
            echo "✓ Wrote CNAME for $CUSTOM_DOMAIN"
          fi

          # No Jekyll processing on Pages
          touch public/.nojekyll

          # Sanity checks
          test -s public/index.html || { echo "❌ public/index.html is empty."; exit 23; }
          test -s public/registry.json || { echo "❌ public/registry.json is empty."; exit 24; }

          # Validate JSON using Node (avoids apt install)
          node -e "const fs=require('fs'); JSON.parse(fs.readFileSync('public/registry.json','utf8')); console.log('✓ registry.json parses');"

      - name: Show publish tree
        run: |
          echo "---- PUBLIC TREE ----"
          (cd public && find . -maxdepth 2 -type f -print)
          echo "---- HEADS ----"
          echo "[index.html]"
          head -c 1024 public/index.html || true
          echo
          echo "[registry.json]"
          head -c 1024 public/registry.json || true
          echo

      - name: Configure Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
