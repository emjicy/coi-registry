# .github/workflows/publish.yml
name: Publish COI Registry

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node (for JSON validation)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Validate public/ contents
        run: |
          set -euo pipefail

          # Required files
          test -s public/index.html || { echo "❌ public/index.html missing or empty"; exit 21; }
          test -f public/registry.json || { echo "❌ public/registry.json not found (expected in public/)"; exit 22; }

          # At least one JSON present (guard against empty artifacts)
          JSON_COUNT=$(find public -maxdepth 1 -type f -name "*.json" | wc -l | tr -d ' ')
          echo "JSON files in public/: ${JSON_COUNT}"
          if [ "${JSON_COUNT}" -lt 1 ]; then
            echo "❌ No JSON files found in public/"; exit 23;
          fi

          # Validate every JSON file in public/
          node -e '
            const fs = require("fs");
            const path = require("path");
            const dir = "public";
            const files = fs.readdirSync(dir).filter(f => f.endsWith(".json"));
            if (!files.length) { console.error("No .json files to validate"); process.exit(1); }
            let ok = true;
            for (const f of files) {
              const p = path.join(dir, f);
              try {
                const s = fs.readFileSync(p, "utf8");
                JSON.parse(s);
                console.log("✓ JSON OK:", f, `(${s.length} bytes)`);
              } catch (e) {
                console.error("❌ JSON invalid:", f, e.message);
                ok = false;
              }
            }
            if (!ok) process.exit(1);
          '

          # Ensure Pages doesn’t run Jekyll on the artifact
          touch public/.nojekyll

      - name: Show publish tree
        run: |
          echo "---- PUBLIC TREE ----"
          (cd public && find . -maxdepth 2 -type f -print | sort)
          echo "---- HEADS ----"
          echo "[index.html]"
          head -c 1024 public/index.html || true
          echo
          echo "[registry.json]"
          head -c 1024 public/registry.json || true
          echo

      - name: Configure Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact (public/)
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
